export interface DefaultAddress {
    address: string;
    network: number | Chain;
}
export interface OtherAddress {
    address: string;
    network: number[] | Chain[];
}
export interface Explorer {
    name: string;
    url: string;
    standard: string;
}
export interface Chain {
    id: number;
    chainId: number;
    name: string;
    chain: string;
    icon: string;
    explorers: Explorer[];
    type: string;
    rpc: string[];
    nativeCurrency: {
        name: string;
        symbol: string;
        decimals: number;
    };
    faucets: string[];
    infoURL: string;
    shortName: string;
}
export interface ID {
    id?: string;
    wagpayId: string;
    identifier?: string;
    provider?: string;
    default: DefaultAddress;
    others: OtherAddress[];
    assumeHighSecurity: boolean;
    arweaveCommitHash?: string;
    syncedAt?: Date;
    createdAt?: Date;
    updatedAt?: Date;
}
export interface Request {
    id?: number;
    fromId?: string | ID;
    toId: string | ID;
    token: string;
    chain: number;
    amount: string;
    data?: string;
    executed?: boolean;
    transactionHash?: string;
    sameChain?: boolean;
    fromChain?: number;
    fromToken?: string;
    dstTransactionHash?: string;
    message?: string;
    label?: string;
    createdAt?: Date;
    updatedAt?: Date;
}
export interface IDConfig {
    id?: string;
    wagpayId: string | ID;
    forcedSameChainPayment: boolean;
    requests: number | Request[];
}
export interface IdOrSignedMsg {
    signedMsg?: string;
    id?: string;
}
export interface UserConfig {
    fromId: string | ID;
    fromChain: number;
    fromToken: string;
    fromAddress: string;
    amount?: string;
}
export interface PaymentConfig {
    toConfig: {
        paymentRequest?: number;
        toId?: string;
    };
    userConfig: UserConfig;
}
export interface IDWithSignedMsg extends ID {
    signedMsg: string;
}
export interface UpdateIdConfig {
    configId: string;
    wagpayId: string;
    forcedSameChainPayment: boolean;
}
export interface UpdateOtherAddressParams {
    address?: string;
    network?: number[];
    delete_network?: number[];
}
export interface UpdateRequest {
    id: number;
    fromId: string;
    executed: boolean;
    fromChain: number;
    fromToken: string;
    transactionHash: string;
    sameChain: boolean;
    dstTransactionHash?: string;
}
export interface Params<T> {
    apiKey: string;
    data: T;
}
export interface GetSupportedChains {
    data?: {
        internalId?: number;
    };
}
export interface GetIdParams extends Params<IdOrSignedMsg> {
}
export interface GetIdConfigParams extends Params<{
    id: string;
}> {
}
export interface CreateIdConfig extends Params<UpdateIdConfig> {
}
export interface CreateIdParams extends Params<IDWithSignedMsg> {
}
export interface UpdateDefaultAddress extends Params<{
    address?: string;
    network?: number;
    signedMsg: string;
}> {
}
export interface UpdateOtherAddress extends Params<{
    others?: UpdateOtherAddressParams[];
    delete_address?: string[];
    signedMsg: string;
}> {
}
export interface GetPaymentRequestParams extends Params<{
    id?: string;
    my?: boolean;
    signedMsg?: string;
}> {
}
export interface CreatePaymentRequestParams extends Params<Request> {
}
export interface UpdatePaymentRequestParams extends Params<UpdateRequest> {
}
export interface PayParams extends Params<PaymentConfig> {
}
export * from "./errors";
